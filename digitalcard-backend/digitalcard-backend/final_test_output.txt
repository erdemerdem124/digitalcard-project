[INFO] Error stacktraces are turned on.
[INFO] Scanning for projects...
[INFO] 
[INFO] ------------< com.soliner.digitalcard:digitalcard-backend >-------------
[INFO] Building digitalcard-backend 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.3.2:clean (default-clean) @ digitalcard-backend ---
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ digitalcard-backend ---
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] Copying 0 resource from src\main\resources to target\classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ digitalcard-backend ---
[INFO] Changes detected - recompiling the module! :source
[INFO] Compiling 42 source files with javac [debug release 17] to target\classes
[WARNING] /C:/digitalcard-backend/digitalcard-backend/src/main/java/com/soliner/digitalcard/application/mapper/SocialLinkMapper.java:[18,16] Unmapped target property: "id".
[WARNING] /C:/digitalcard-backend/digitalcard-backend/src/main/java/com/soliner/digitalcard/application/mapper/ProjectMapper.java:[25,13] Unmapped target property: "id".
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ digitalcard-backend ---
[INFO] Copying 0 resource from src\test\resources to target\test-classes
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ digitalcard-backend ---
[INFO] Changes detected - recompiling the module! :dependency
[INFO] Compiling 4 source files with javac [debug release 17] to target\test-classes
[WARNING] The following options were not recognized by any processor: '[mapstruct.defaultComponentModel]'
[INFO] 
[INFO] --- surefire:3.2.5:test (default-test) @ digitalcard-backend ---
[INFO] Surefire report directory: C:\digitalcard-backend\digitalcard-backend\target\surefire-reports
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.soliner.digitalcard.application.services.impl.UserServiceImplTest
Java HotSpot(TM) 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.396 s -- in com.soliner.digitalcard.application.services.impl.UserServiceImplTest
[INFO] Running com.soliner.digitalcard.digitalcard_backend.DigitalcardBackendApplicationTests
[WARNING] Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0 s -- in com.soliner.digitalcard.digitalcard_backend.DigitalcardBackendApplicationTests
[INFO] Running com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-05-26T09:18:29.081+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.c.UserControllerIntegrationTest  : Starting UserControllerIntegrationTest using Java 17.0.12 with PID 7476 (started by hp in C:\digitalcard-backend\digitalcard-backend)
2025-05-26T09:18:29.083+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.c.UserControllerIntegrationTest  : The following 1 profile is active: "test"
2025-05-26T09:18:29.745+03:00  INFO 7476 --- [digitalcard-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-26T09:18:29.816+03:00  INFO 7476 --- [digitalcard-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
2025-05-26T09:18:30.580+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-26T09:18:30.652+03:00  INFO 7476 --- [digitalcard-backend] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2025-05-26T09:18:30.690+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-05-26T09:18:30.800+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-26T09:18:30.827+03:00  INFO 7476 --- [digitalcard-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-26T09:18:31.118+03:00  INFO 7476 --- [digitalcard-backend] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ec3944
2025-05-26T09:18:31.118+03:00  INFO 7476 --- [digitalcard-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-26T09:18:31.155+03:00  WARN 7476 --- [digitalcard-backend] [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-26T09:18:32.036+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-26T09:18:32.132+03:00  INFO 7476 --- [digitalcard-backend] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-26T09:18:32.657+03:00  WARN 7476 --- [digitalcard-backend] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-26T09:18:33.019+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5350a926, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77732366, org.springframework.security.web.context.SecurityContextHolderFilter@64547a83, org.springframework.security.web.header.HeaderWriterFilter@30fffb53, org.springframework.security.web.authentication.logout.LogoutFilter@365fde74, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@487f025, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ef570be, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c046af, org.springframework.security.web.access.ExceptionTranslationFilter@51179fad, org.springframework.security.web.access.intercept.AuthorizationFilter@57fe6f2d]
2025-05-26T09:18:33.051+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@372c428, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4458887d, org.springframework.security.web.context.SecurityContextHolderFilter@4a234e1f, org.springframework.security.web.header.HeaderWriterFilter@29b61bb, org.springframework.web.filter.CorsFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@7640a191, com.soliner.digitalcard.webApi.security.JwtAuthenticationFilter@1798c749, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@406cc81b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64ef9b9a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c364a9d, org.springframework.security.web.session.SessionManagementFilter@60a4595e, org.springframework.security.web.access.ExceptionTranslationFilter@6d4bb60f, org.springframework.security.web.access.intercept.AuthorizationFilter@7a6078d]
2025-05-26T09:18:33.413+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : RequestLoggingFilter baþlatýldý.
2025-05-26T09:18:33.413+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-05-26T09:18:33.413+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-05-26T09:18:33.413+03:00  INFO 7476 --- [digitalcard-backend] [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-05-26T09:18:33.438+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.c.UserControllerIntegrationTest  : Started UserControllerIntegrationTest in 4.645 seconds (process running for 7.04)
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:33.776+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/users
2025-05-26T09:18:33.776+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/users
2025-05-26T09:18:33.776+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: POST /api/users
2025-05-26T09:18:33.776+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users
2025-05-26T09:18:33.776+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:33.776+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-05-26T09:18:33.871+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:33.871+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: POST /api/users

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/users
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"150"]
             Body = {"username":"existinguser","email":"new@example.com","password":"NewPass123!","firstName":"New","lastName":"Person","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:33.858+00:00","status":400,"error":"Bad Request","message":"Kullanýcý adý 'existinguser' zaten mevcut.","path":"/api/users","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/users
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"150"]
             Body = {"username":"existinguser","email":"new@example.com","password":"NewPass123!","firstName":"New","lastName":"Person","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:33.858+00:00","status":400,"error":"Bad Request","message":"Kullanýcý adý 'existinguser' zaten mevcut.","path":"/api/users","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:33.994+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing GET /api/users/250
2025-05-26T09:18:33.994+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured GET /api/users/250
2025-05-26T09:18:33.994+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: GET /api/users/250
2025-05-26T09:18:33.994+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/250
2025-05-26T09:18:33.994+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:33.994+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
2025-05-26T09:18:34.001+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.001+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: GET /api/users/250

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/users/250
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#getUserById(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":250,"username":"getuser","email":"get@example.com","firstName":"Get","lastName":"User","profilePhotoUrl":null,"bio":null,"socialLinks":[],"projects":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:34.151+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing DELETE /api/users/251
2025-05-26T09:18:34.152+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured DELETE /api/users/251
2025-05-26T09:18:34.152+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: DELETE /api/users/251
2025-05-26T09:18:34.152+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/251
2025-05-26T09:18:34.152+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.152+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
2025-05-26T09:18:34.325+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.325+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: DELETE /api/users/251

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /api/users/251
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#deleteUser(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:34.468+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing PUT /api/users/252
2025-05-26T09:18:34.468+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured PUT /api/users/252
2025-05-26T09:18:34.468+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: PUT /api/users/252
2025-05-26T09:18:34.468+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/252
2025-05-26T09:18:34.468+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.468+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-05-26T09:18:34.483+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.483+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: PUT /api/users/252

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/252
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"147"]
             Body = {"username":"user2","email":"user1@example.com","password":"NewPass789#","firstName":"Updated","lastName":"User","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#updateUser(Long, UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.483+00:00","status":400,"error":"Bad Request","message":"Kullanýcý adý 'user2' zaten mevcut.","path":"/api/users/252","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/252
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"147"]
             Body = {"username":"user2","email":"user1@example.com","password":"NewPass789#","firstName":"Updated","lastName":"User","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#updateUser(Long, UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.483+00:00","status":400,"error":"Bad Request","message":"Kullanýcý adý 'user2' zaten mevcut.","path":"/api/users/252","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:34.563+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/users
2025-05-26T09:18:34.563+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/users
2025-05-26T09:18:34.563+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: POST /api/users
2025-05-26T09:18:34.563+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users
2025-05-26T09:18:34.563+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.563+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-26T09:18:34.563+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.563+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: POST /api/users

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/users
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"158"]
             Body = {"username":"anotheruser","email":"existing@example.com","password":"NewPass123!","firstName":"Another","lastName":"Person","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.563+00:00","status":400,"error":"Bad Request","message":"E-posta adresi 'existing@example.com' zaten kayýtlý.","path":"/api/users","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/users
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"158"]
             Body = {"username":"anotheruser","email":"existing@example.com","password":"NewPass123!","firstName":"Another","lastName":"Person","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.563+00:00","status":400,"error":"Bad Request","message":"E-posta adresi 'existing@example.com' zaten kayýtlý.","path":"/api/users","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
2025-05-26T09:18:34.579+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing GET /api/users/99
2025-05-26T09:18:34.579+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured GET /api/users/99
2025-05-26T09:18:34.579+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: GET /api/users/99
2025-05-26T09:18:34.579+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/99
2025-05-26T09:18:34.579+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.579+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-05-26T09:18:34.594+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.594+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: GET /api/users/99

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/users/99
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#getUserById(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.594+00:00","status":404,"error":"Not Found","message":"Kullanýcý, ID : '99' ile bulunamadý","path":"/api/users/99","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/users/99
       Parameters = {}
          Headers = [Accept:"application/json"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#getUserById(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.594+00:00","status":404,"error":"Not Found","message":"Kullanýcý, ID : '99' ile bulunamadý","path":"/api/users/99","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
2025-05-26T09:18:34.596+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing PUT /api/users/99
2025-05-26T09:18:34.596+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured PUT /api/users/99
2025-05-26T09:18:34.596+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: PUT /api/users/99
2025-05-26T09:18:34.596+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/99
2025-05-26T09:18:34.596+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.596+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-05-26T09:18:34.610+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.610+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: PUT /api/users/99

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/99
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"156"]
             Body = {"username":"nonexistent","email":"nonexistent@example.com","password":"Pass123!","firstName":"Non","lastName":"Existent","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#updateUser(Long, UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.610+00:00","status":404,"error":"Not Found","message":"Kullanýcý, ID : '99' ile bulunamadý","path":"/api/users/99","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/99
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"156"]
             Body = {"username":"nonexistent","email":"nonexistent@example.com","password":"Pass123!","firstName":"Non","lastName":"Existent","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#updateUser(Long, UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.610+00:00","status":404,"error":"Not Found","message":"Kullanýcý, ID : '99' ile bulunamadý","path":"/api/users/99","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
2025-05-26T09:18:34.622+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing POST /api/users
2025-05-26T09:18:34.622+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured POST /api/users
2025-05-26T09:18:34.622+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: POST /api/users
2025-05-26T09:18:34.622+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users
2025-05-26T09:18:34.622+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.622+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:34.690+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.690+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: POST /api/users

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/users
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"168"]
             Body = {"username":"integrationuser","email":"integration@example.com","password":"TestPass123!","firstName":"Integration","lastName":"Test","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":255,"username":"integrationuser","email":"integration@example.com","firstName":"Integration","lastName":"Test","profilePhotoUrl":null,"bio":null,"socialLinks":[],"projects":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
2025-05-26T09:18:34.784+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing DELETE /api/users/99
2025-05-26T09:18:34.784+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured DELETE /api/users/99
2025-05-26T09:18:34.784+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: DELETE /api/users/99
2025-05-26T09:18:34.784+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/99
2025-05-26T09:18:34.784+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.784+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
2025-05-26T09:18:34.800+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.800+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: DELETE /api/users/99

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /api/users/99
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#deleteUser(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.800+00:00","status":404,"error":"Not Found","message":"Kullanýcý, ID : '99' ile bulunamadý","path":"/api/users/99","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /api/users/99
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#deleteUser(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.800+00:00","status":404,"error":"Not Found","message":"Kullanýcý, ID : '99' ile bulunamadý","path":"/api/users/99","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:34.943+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing PUT /api/users/256
2025-05-26T09:18:34.943+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured PUT /api/users/256
2025-05-26T09:18:34.943+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: PUT /api/users/256
2025-05-26T09:18:34.943+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/256
2025-05-26T09:18:34.943+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:34.943+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-05-26T09:18:34.943+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:34.943+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: PUT /api/users/256

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/256
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"157"]
             Body = {"username":"userA_updated","email":"userB@example.com","password":"NewPassC789#","firstName":"UpdatedUser","lastName":"A","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#updateUser(Long, UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.943+00:00","status":400,"error":"Bad Request","message":"E-posta adresi 'userB@example.com' zaten kayýtlý.","path":"/api/users/256","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/256
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"157"]
             Body = {"username":"userA_updated","email":"userB@example.com","password":"NewPassC789#","firstName":"UpdatedUser","lastName":"A","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#updateUser(Long, UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = com.soliner.digitalcard.core.types.exceptions.InvalidInputException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"timestamp":"2025-05-26T06:18:34.943+00:00","status":400,"error":"Bad Request","message":"E-posta adresi 'userB@example.com' zaten kayýtlý.","path":"/api/users/256","details":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (bio, email, first_name, last_name, password_hash, profile_photo_url, username) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-05-26T09:18:35.022+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Securing PUT /api/users/258
2025-05-26T09:18:35.022+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.security.web.FilterChainProxy        : Secured PUT /api/users/258
2025-05-26T09:18:35.022+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Gelen Ýstek: PUT /api/users/258
2025-05-26T09:18:35.022+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Ýstek URI: /api/users/258
2025-05-26T09:18:35.022+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Atlanacak URL desenleri: [/api/auth/**, /api/public/**]
2025-05-26T09:18:35.022+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.s.JwtAuthenticationFilter        : shouldNotFilter - Eþleþme durumu (shouldSkip): false
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    update
        users 
    set
        bio=?,
        email=?,
        first_name=?,
        last_name=?,
        password_hash=?,
        profile_photo_url=?,
        username=? 
    where
        id=?
2025-05-26T09:18:35.104+03:00 DEBUG 7476 --- [digitalcard-backend] [           main] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-05-26T09:18:35.104+03:00  INFO 7476 --- [digitalcard-backend] [           main] c.s.d.w.filter.RequestLoggingFilter      : Ýstek Tamamlandý: PUT /api/users/258

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /api/users/258
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"157"]
             Body = {"username":"updateduser","email":"updated@example.com","password":"NewPass456@","firstName":"Updated","lastName":"Person","profilePhotoUrl":null,"bio":null}
    Session Attrs = {}

Handler:
             Type = com.soliner.digitalcard.webApi.controller.UserController
           Method = com.soliner.digitalcard.webApi.controller.UserController#updateUser(Long, UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":258,"username":"updateduser","email":"updated@example.com","firstName":"Updated","lastName":"Person","profilePhotoUrl":null,"bio":null,"socialLinks":[],"projects":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.bio,
        u1_0.email,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password_hash,
        u1_0.profile_photo_url,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    select
        p1_0.user_id,
        p1_0.id,
        p1_0.description,
        p1_0.project_url,
        p1_0.technologies,
        p1_0.title 
    from
        projects p1_0 
    where
        p1_0.user_id=?
Hibernate: 
    select
        sl1_0.user_id,
        sl1_0.id,
        sl1_0.platform,
        sl1_0.url 
    from
        social_links sl1_0 
    where
        sl1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
[ERROR] Tests run: 11, Failures: 7, Errors: 0, Skipped: 0, Time elapsed: 6.809 s <<< FAILURE! -- in com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest
[ERROR] com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.createUser_shouldReturn409Conflict_whenUsernameExists -- Time elapsed: 0.455 s <<< FAILURE!
java.lang.AssertionError: Status expected:<409> but was:<400>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:637)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.createUser_shouldReturn409Conflict_whenUsernameExists(UserControllerIntegrationTest.java:134)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

[ERROR] com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.updateUser_shouldReturn409Conflict_whenUsernameAlreadyExists -- Time elapsed: 0.158 s <<< FAILURE!
java.lang.AssertionError: Status expected:<409> but was:<400>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:637)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.updateUser_shouldReturn409Conflict_whenUsernameAlreadyExists(UserControllerIntegrationTest.java:310)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

[ERROR] com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.createUser_shouldReturn409Conflict_whenEmailExists -- Time elapsed: 0.096 s <<< FAILURE!
java.lang.AssertionError: Status expected:<409> but was:<400>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:637)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.createUser_shouldReturn409Conflict_whenEmailExists(UserControllerIntegrationTest.java:168)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

[ERROR] com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.getUserById_shouldReturn404NotFound_whenUserDoesNotExist -- Time elapsed: 0.017 s <<< FAILURE!
java.lang.AssertionError: 
JSON path "$.message"
Expected: is "Kullanýcý bulunamadý ID : '99'"
     but: was "Kullanýcý, ID : '99' ile bulunamadý"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:74)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$0(JsonPathResultMatchers.java:87)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.getUserById_shouldReturn404NotFound_whenUserDoesNotExist(UserControllerIntegrationTest.java:211)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

[ERROR] com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.updateUser_shouldReturn404NotFound_whenUserDoesNotExist -- Time elapsed: 0.019 s <<< FAILURE!
java.lang.AssertionError: 
JSON path "$.message"
Expected: is "Kullanýcý bulunamadý ID : '99'"
     but: was "Kullanýcý, ID : '99' ile bulunamadý"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:74)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$0(JsonPathResultMatchers.java:87)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.updateUser_shouldReturn404NotFound_whenUserDoesNotExist(UserControllerIntegrationTest.java:281)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

[ERROR] com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.deleteUser_shouldReturn404NotFound_whenUserDoesNotExist -- Time elapsed: 0.016 s <<< FAILURE!
java.lang.AssertionError: 
JSON path "$.message"
Expected: is "Kullanýcý bulunamadý ID : '99'"
     but: was "Kullanýcý, ID : '99' ile bulunamadý"
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:74)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$0(JsonPathResultMatchers.java:87)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.deleteUser_shouldReturn404NotFound_whenUserDoesNotExist(UserControllerIntegrationTest.java:387)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

[ERROR] com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.updateUser_shouldReturn409Conflict_whenEmailAlreadyExists -- Time elapsed: 0.158 s <<< FAILURE!
java.lang.AssertionError: Status expected:<409> but was:<400>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:637)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.soliner.digitalcard.webApi.controller.UserControllerIntegrationTest.updateUser_shouldReturn409Conflict_whenEmailAlreadyExists(UserControllerIntegrationTest.java:342)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   UserControllerIntegrationTest.createUser_shouldReturn409Conflict_whenEmailExists:168 Status expected:<409> but was:<400>
[ERROR]   UserControllerIntegrationTest.createUser_shouldReturn409Conflict_whenUsernameExists:134 Status expected:<409> but was:<400>
[ERROR]   UserControllerIntegrationTest.deleteUser_shouldReturn404NotFound_whenUserDoesNotExist:387 JSON path "$.message"
Expected: is "Kullanýcý bulunamadý ID : '99'"
     but: was "Kullanýcý, ID : '99' ile bulunamadý"
[ERROR]   UserControllerIntegrationTest.getUserById_shouldReturn404NotFound_whenUserDoesNotExist:211 JSON path "$.message"
Expected: is "Kullanýcý bulunamadý ID : '99'"
     but: was "Kullanýcý, ID : '99' ile bulunamadý"
[ERROR]   UserControllerIntegrationTest.updateUser_shouldReturn404NotFound_whenUserDoesNotExist:281 JSON path "$.message"
Expected: is "Kullanýcý bulunamadý ID : '99'"
     but: was "Kullanýcý, ID : '99' ile bulunamadý"
[ERROR]   UserControllerIntegrationTest.updateUser_shouldReturn409Conflict_whenEmailAlreadyExists:342 Status expected:<409> but was:<400>
[ERROR]   UserControllerIntegrationTest.updateUser_shouldReturn409Conflict_whenUsernameAlreadyExists:310 Status expected:<409> but was:<400>
[INFO] 
[ERROR] Tests run: 28, Failures: 7, Errors: 0, Skipped: 1
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  15.253 s
[INFO] Finished at: 2025-05-26T09:18:35+03:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.2.5:test (default-test) on project digitalcard-backend: There are test failures.
[ERROR] 
[ERROR] Please refer to C:\digitalcard-backend\digitalcard-backend\target\surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.2.5:test (default-test) on project digitalcard-backend: There are test failures.

Please refer to C:\digitalcard-backend\digitalcard-backend\target\surefire-reports for the individual test results.
Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute2 (MojoExecutor.java:333)
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute (MojoExecutor.java:316)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:212)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:174)
    at org.apache.maven.lifecycle.internal.MojoExecutor.access$000 (MojoExecutor.java:75)
    at org.apache.maven.lifecycle.internal.MojoExecutor$1.run (MojoExecutor.java:162)
    at org.apache.maven.plugin.DefaultMojosExecutionStrategy.execute (DefaultMojosExecutionStrategy.java:39)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:159)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:105)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:73)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:53)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:118)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:261)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:173)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:101)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:906)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:283)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:206)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:77)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:568)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:255)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:201)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:361)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:314)
Caused by: org.apache.maven.plugin.MojoFailureException: There are test failures.

Please refer to C:\digitalcard-backend\digitalcard-backend\target\surefire-reports for the individual test results.
Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
    at org.apache.maven.plugin.surefire.SurefireHelper.throwException (SurefireHelper.java:247)
    at org.apache.maven.plugin.surefire.SurefireHelper.reportExecution (SurefireHelper.java:159)
    at org.apache.maven.plugin.surefire.SurefirePlugin.handleSummary (SurefirePlugin.java:542)
    at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked (AbstractSurefireMojo.java:1102)
    at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute (AbstractSurefireMojo.java:910)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:126)
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute2 (MojoExecutor.java:328)
    at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute (MojoExecutor.java:316)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:212)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:174)
    at org.apache.maven.lifecycle.internal.MojoExecutor.access$000 (MojoExecutor.java:75)
    at org.apache.maven.lifecycle.internal.MojoExecutor$1.run (MojoExecutor.java:162)
    at org.apache.maven.plugin.DefaultMojosExecutionStrategy.execute (DefaultMojosExecutionStrategy.java:39)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:159)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:105)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:73)
    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:53)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:118)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:261)
    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:173)
    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:101)
    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:906)
    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:283)
    at org.apache.maven.cli.MavenCli.main (MavenCli.java:206)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)
    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:77)
    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke (Method.java:568)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:255)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:201)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:361)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:314)
[ERROR] 
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
